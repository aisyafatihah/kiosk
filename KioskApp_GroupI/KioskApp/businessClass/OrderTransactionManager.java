package businessClass;


import java.sql.*;

import kioskapp.ordertransaction.OrderTransaction;

/**
 * This class represent the front-end class in the 3-tier architecture
 * @author HamizahYusni
 */
public class OrderTransactionManager {

	private DbController dbCtrl;

	public OrderTransactionManager(){
		dbCtrl = new DbController();
	}

	
	// To insert transaction detail into database and get the auto generate transaction id
		public OrderTransaction insertTransaction(OrderTransaction orderTransaction){
		
		int qstate =0;
       
		String query	="INSERT into ordertransaction (TransactionDate, `Order`, AmountCharged, TransactionStatus, Last4Digits, OrderMode ) values (LOCALTIMESTAMP(),?, ?, ?, ?, ?)";

		try{
			Connection conn = dbCtrl.getConnection();
			PreparedStatement pStmt = conn.prepareStatement(query);
			pStmt.setInt(1, orderTransaction.getOrder().getOrderId());
			pStmt.setDouble(2, orderTransaction.getAmountCharged());
	
			if (orderTransaction.isTransactionStatus())
				pStmt.setInt(3, 1);
            else
                 pStmt.setInt(3, 0);
            pStmt.setInt(4, orderTransaction.getLast4Digits());
            pStmt.setString(5,orderTransaction.getOrderMode());
            qstate = pStmt.executeUpdate();
            

            if(qstate!=0){   
            	
            	// To get the order transaction id generated by database to generate receipt
                query = "SELECT OrderTransactionId, TransactionDate FROM ordertransaction";
                
                // To allow cursor to move from front and back
                 pStmt = conn.prepareStatement(query,ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE );
                 ResultSet rs = pStmt.executeQuery();
                 
                 // Move cursor to the last row of the table
                 rs.afterLast();
                 if(rs.previous()) {
                	 orderTransaction.setOrderTransactionId(rs.getInt(1));
                	 orderTransaction.setTransactionDate(rs.getDate(2) );
                 }
                 rs.close();
     			pStmt.close();
     	        conn.close();
            }         

        }catch(Exception e){
        	e.printStackTrace();
        }
                 	
        return orderTransaction;
	}
}